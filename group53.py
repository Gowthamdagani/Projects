# -*- coding: utf-8 -*-
"""Group53.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17Dw0gd0OF6Bm-baUwCJtggoXQfLRa-LU
"""

import nltk
nltk.download('stopwords')
nltk.download('punkt')
from nltk.corpus import stopwords

stopwords_en=stopwords.words("english")

def preprocessing(raw):
    wordlist=nltk.word_tokenize(raw) 
    text=[w.lower() for w in wordlist if w not in stopwords_en] 
    return text

file1=open('t1.txt','r',encoding="utf8")
doc1=preprocessing(file1.read())


file2=open('t2.txt','r',encoding="utf8")
doc2=preprocessing(file2.read())

from nltk.probability import FreqDist
word_set=set(doc2).union(set(doc1))

freq_doc1=FreqDist(doc1)
doc1_length=len(doc1)
doc1_tf_dict=dict.fromkeys(word_set,0)
for word in doc1:
  doc1_tf_dict[word]=freq_doc1[word]/doc1_length

freq_doc2=FreqDist(doc2)
doc2_length=len(doc2)
doc2_tf_dict=dict.fromkeys(word_set,0)
for word in doc2:
  doc2_tf_dict[word]=freq_doc2[word]/doc2_length

doc12_idf_dict=dict.fromkeys(word_set,0)
doc12_length=2

for word in doc12_idf_dict.keys(): 
  if word in doc1:
    doc12_idf_dict[word]+=1
  if word in doc2:
    doc12_idf_dict[word]+=1

import math
for word,val in doc12_idf_dict.items():
  doc12_idf_dict[word]=1+math.log(doc12_length/(float(val)))

doc1_tfidf_dict=dict.fromkeys(word_set,0)
for word in doc1:
  doc1_tfidf_dict[word]=(doc1_tf_dict[word])*(doc12_idf_dict[word])

doc2_tfidf_dict=dict.fromkeys(word_set,0)
for word in doc2:
  doc2_tfidf_dict[word]=(doc2_tf_dict[word])*(doc12_idf_dict[word])

v1=list(doc1_tfidf_dict.values())
v2=list(doc2_tfidf_dict.values())
similarity=1-nltk.cluster.cosine_distance(v1,v2)
print("Similarity : {:4.2f} %".format(similarity*100))